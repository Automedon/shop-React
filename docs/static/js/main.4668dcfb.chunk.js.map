{
  "version": 3,
  "sources": [
    "images/Apple iPad Mini 2 16GB.jfif",
    "images/Apple iPad Mini 2 32GB.jfif",
    "images/Canon T7i.jfif",
    "images/Apple Watch Sport.jfif",
    "images/Apple Watch Silver.jfif",
    "Nav.js",
    "Item.js",
    "ItemPage.js",
    "static-data.js",
    "CartPage.js",
    "App.js",
    "serviceWorker.js",
    "index.js"
  ],
  "names": [
    "module",
    "exports",
    "__webpack_require__",
    "p",
    "Nav",
    "_ref",
    "activeTab",
    "onTabChange",
    "react_default",
    "a",
    "createElement",
    "className",
    "concat",
    "onClick",
    "Item",
    "item",
    "children",
    "src",
    "image",
    "alt",
    "name",
    "description",
    "price",
    "ItemPage",
    "items",
    "onAddToCart",
    "map",
    "key",
    "id",
    "src_Item_0",
    "AppleiPadMini216GB",
    "AppleiPadMini232GB",
    "CanonT7i",
    "AppleWatchSport",
    "AppleWatchSilver",
    "CartPage",
    "onAddOne",
    "onRemoveOne",
    "count",
    "App",
    "state",
    "cart",
    "handleTabChange",
    "index",
    "_this",
    "setState",
    "handleAddToCart",
    "Object",
    "toConsumableArray",
    "handleRemoveOne",
    "indexOf",
    "slice",
    "this",
    "src_ItemPage",
    "renderCart",
    "itemCounts",
    "reduce",
    "itemId",
    "cartItems",
    "keys",
    "find",
    "parseInt",
    "objectSpread",
    "src_CartPage",
    "src_Nav",
    "length",
    "renderContent",
    "React",
    "Component",
    "Boolean",
    "window",
    "location",
    "hostname",
    "match",
    "ReactDOM",
    "render",
    "src_App_0",
    "document",
    "getElementById",
    "navigator",
    "serviceWorker",
    "ready",
    "then",
    "registration",
    "unregister"
  ],
  "mappings": "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",
  "file": "static/js/main.4668dcfb.chunk.js",
  "sourcesContent": [
    "module.exports = __webpack_public_path__ + \"static/media/Apple iPad Mini 2 16GB.39493b37.jfif\";",
    "module.exports = __webpack_public_path__ + \"static/media/Apple iPad Mini 2 32GB.c3e65357.jfif\";",
    "module.exports = __webpack_public_path__ + \"static/media/Canon T7i.46bdb0ef.jfif\";",
    "module.exports = __webpack_public_path__ + \"static/media/Apple Watch Sport.1ee98623.jfif\";",
    "module.exports = __webpack_public_path__ + \"static/media/Apple Watch Silver.3892acb7.jfif\";",
    "import React from 'react';\r\nconst Nav = ({ activeTab, onTabChange }) => (\r\n\t<nav className=\"App-nav\">\r\n\t\t<ul>\r\n\t\t\t<li className={`App-nav-item ${activeTab === 0 && 'selected'}`}>\r\n\t\t\t\t<a onClick={() => onTabChange(0)}>Items</a>\r\n\t\t\t</li>\r\n\t\t\t<li className={`App-nav-item ${activeTab === 1 && 'selected'}`}>\r\n\t\t\t\t<a onClick={() => onTabChange(1)}>Cart</a>\r\n\t\t\t</li>\r\n\t\t</ul>\r\n\t</nav>\r\n);\r\nexport default Nav;",
    "import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Item.css\";\n\nconst Item = ({ item, children }) => (\n  <div className=\"Item\">\n    <div className=\"Item-left\">\n      <img src={item.image} alt=\"image\" className=\"Item-image\" />\n      <div className=\"Item-title\">{item.name}</div>\n      <div className=\"Item-description\">{item.description}</div>\n    </div>\n    <div className=\"Item-right\">\n      <div className=\"Item-price\">${item.price}</div>\n      {children}\n    </div>\n  </div>\n);\nItem.propTypes = {\n  item: PropTypes.object.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Item;\n",
    "import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Item from \"./Item\";\nimport \"./ItemPage.css\";\nfunction ItemPage({ items, onAddToCart }) {\n  return (\n    <ul className=\"ItemPage-items\">\n      {items.map((item) => (\n        <li key={item.id} className=\"ItemPage-item\">\n          <Item item={item}>\n            <button\n              className=\"Item-addToCart\"\n              onClick={() => onAddToCart(item)}\n            >\n              Add to Cart\n            </button>\n          </Item>\n        </li>\n      ))}\n    </ul>\n  );\n}\nItemPage.propTypes = {\n  items: PropTypes.array.isRequired,\n  onAddToCart: PropTypes.func.isRequired,\n};\nexport default ItemPage;\n",
    "import AppleiPadMini216GB from \"./images/Apple iPad Mini 2 16GB.jfif\";\nimport AppleiPadMini232GB from \"./images/Apple iPad Mini 2 32GB.jfif\";\nimport CanonT7i from \"./images/Canon T7i.jfif\";\nimport AppleWatchSport from \"./images/Apple Watch Sport.jfif\";\nimport AppleWatchSilver from \"./images/Apple Watch Silver.jfif\";\n\nlet items = [\n  {\n    id: 0,\n    name: \"Apple iPad Mini 2 16GB\",\n    image: AppleiPadMini216GB,\n    description: \"An iPad like no other. 16GB, WiFi, 4G.\",\n    price: 229.0,\n  },\n  {\n    id: 1,\n    name: \"Apple iPad Mini 2 32GB\",\n    image: AppleiPadMini232GB,\n    description: \"Even larger than the 16GB.\",\n    price: 279.0,\n  },\n  {\n    id: 2,\n    name: \"Canon T7i\",\n    image: CanonT7i,\n    description: \"DSLR camera with lots of megapixels.\",\n    price: 749.99,\n  },\n  {\n    id: 3,\n    name: \"Apple Watch Sport\",\n    image: AppleWatchSport,\n    description: \"A watch\",\n    price: 249.99,\n  },\n  {\n    id: 4,\n    name: \"Apple Watch Silver\",\n    image: AppleWatchSilver,\n    description: \"A more expensive watch\",\n    price: 599.99,\n  },\n];\nexport { items };\n",
    "import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport Item from \"./Item\";\nimport \"./CartPage.css\";\nfunction CartPage({ items, onAddOne, onRemoveOne }) {\n  return (\n    <ul className=\"CartPage-items\">\n      {items.map((item) => (\n        <li key={item.id} className=\"CartPage-item\">\n          <Item item={item}>\n            <div className=\"CartItem-controls\">\n              <button\n                className=\"CartItem-removeOne\"\n                onClick={() => onRemoveOne(item)}\n              >\n                &ndash;\n              </button>\n              <span className=\"CartItem-count\">{item.count}</span>\n              <button\n                className=\"CartItem-addOne\"\n                onClick={() => onAddOne(item)}\n              >\n                +\n              </button>\n            </div>\n          </Item>\n        </li>\n      ))}\n    </ul>\n  );\n}\nCartPage.propTypes = {\n  items: PropTypes.array.isRequired,\n  onAddOne: PropTypes.func.isRequired,\n  onRemoveOne: PropTypes.func.isRequired,\n};\nexport default CartPage;\n",
    "import React from \"react\";\nimport Nav from \"./Nav\";\nimport \"./App.css\";\nimport ItemPage from \"./ItemPage\";\nimport { items } from \"./static-data\";\nimport CartPage from \"./CartPage\";\n\nclass App extends React.Component {\n  state = {\n    activeTab: 0,\n    cart: [],\n  };\n  handleTabChange = (index) => {\n    this.setState({\n      activeTab: index,\n    });\n  };\n  handleAddToCart = (item) => {\n    this.setState({\n      cart: [...this.state.cart, item.id],\n    });\n  };\n  handleRemoveOne = (item) => {\n    let index = this.state.cart.indexOf(item.id);\n    this.setState({\n      cart: [\n        ...this.state.cart.slice(0, index),\n        ...this.state.cart.slice(index + 1),\n      ],\n    });\n  };\n\n  renderContent() {\n    switch (this.state.activeTab) {\n      default:\n      case 0:\n        return <ItemPage items={items} onAddToCart={this.handleAddToCart} />;\n      case 1:\n        return this.renderCart();\n    }\n  }\n\n  renderCart() {\n    // Count how many of each item is in the cart\n    let itemCounts = this.state.cart.reduce((itemCounts, itemId) => {\n      itemCounts[itemId] = itemCounts[itemId] || 0;\n      itemCounts[itemId]++;\n      return itemCounts;\n    }, {});\n    // Create an array of items\n    let cartItems = Object.keys(itemCounts).map((itemId) => {\n      // Find the item by its id\n      let item = items.find((item) => item.id === parseInt(itemId, 10));\n      // Create a new \"item\" and add the 'count' property\n      return {\n        ...item,\n        count: itemCounts[itemId],\n      };\n    });\n    return (\n      <CartPage\n        items={cartItems}\n        onAddOne={this.handleAddToCart}\n        onRemoveOne={this.handleRemoveOne}\n      />\n    );\n  }\n\n  render() {\n    let { activeTab } = this.state;\n    return (\n      <div className=\"App\">\n        <Nav activeTab={activeTab} onTabChange={this.handleTabChange} />\n        <div>{this.state.cart.length} items</div>\n        <main className=\"App-content\">{this.renderContent()}</main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n",
    "// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n",
    "import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"
  ],
  "sourceRoot": ""
}